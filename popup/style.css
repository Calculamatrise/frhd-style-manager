@keyframes rotate {
	to { rotate: 360deg }
}

@keyframes slide {
	to { left: 0 }
}

:root {
	--accent-color: hsl(207, 17%, 10%);
	--background-color: hsl(207, 16%, 14%);
	--border-color: hsl(200deg 40% 25% / 50%);
	--text-color: hsl(0, 0%, 99%);
	color-scheme: dark
}

::placeholder { color: hsl(200deg 10% 50% / 50%) }
::-webkit-scrollbar {
	height: 8px;
	width: 8px
}

::-webkit-scrollbar-corner { display: none }
::-webkit-scrollbar-track {
	background-color: #0e111499;
	border-radius: 30px
}

::-webkit-scrollbar-thumb {
	background-color: #232f38;
	border-radius: 30px
}

::-webkit-scrollbar-thumb:hover { background-color: #303b44 }
::-webkit-scrollbar-thumb:active { background-color: #3d4953 }

html {
	background-color: var(--background-color);
	color: var(--text-color);
}

hr {
	background-color: var(--border-color);
	border: none;
	height: 1px;
}

body {
	margin: 0.75rem;
	max-height: fit-content;
	overflow-y: auto;
	transition: all .2s;
	width: 200px;
}

body > .view {
	display: inline-block;
	min-width: 200px;
}

body:has(> div.alt.view) {
	display: flex;
	gap: 1.25rem;
}

body:has(> div.alt.view > input:checked) { translate: -100vw; }

/* body:has(> div.alt.view > input:checked) > :not(div.alt.view) {
	display: none !important;
} */

/* div.alt.view {
	animation: slide 0.5s forwards;
	background-color: var(--background-color);
	bottom: 0;
	box-sizing: border-box;
	left: 100%;
	position: fixed;
	top: 0;
	width: 100%;
} */

.view > nav {
	border-bottom: 1px solid var(--border-color);
	display: grid;
	font-family: roboto_medium, Arial, Helvetica, sans-serif;
	padding-bottom: 0.5rem;
	margin-bottom: 0.5rem;
}

.view > nav:has(> :nth-child(4)) { grid-template-columns: repeat(2, 1fr); }

#state, .danger, .safe {
	color: hsl(0deg 0% 100% / 50%);
	transition: all 200ms;
}

#state:hover { cursor: pointer; }
#state::before { content: "Disabled"; }
#state:hover::before { content: "Click to enable"; }
#state, .danger { background-color: rgb(218, 34, 34, .2) !important; }
#state.enabled, .safe { background-color: rgb(0, 167, 8, .2) !important; }
#state.enabled::before { content: "Enabled"; }
#state.enabled:hover::before { content: "Click to disable"; }
#state.update-avialable { background-color: hsl(180deg 100% 30% / 20%) !important; }
#state.update-available::before { content: "Update"; }
#state.update-available:hover::before { content: "Click to update"; }
#state:hover:active, .danger:hover:active, .safe:hover:active { backdrop-filter: brightness(0.5); }
.danger.hover-border:hover, .danger-border { box-shadow: inset 0px 0px 1px 1px hsl(0 60% 20% / 1); }

a.button, button, details > summary, label {
	-webkit-user-select: none;
	background-color: transparent;
	border: none;
	border-radius: 8px;
	box-sizing: border-box;
	color: hsl(200deg 100% 90% / 50%);
	/* color: hsl(0deg 0% 100% / 75%); */
	display: block;
	overflow: hidden;
	padding: 0.5rem 1rem;
	position: relative;
	text-decoration: none;
	user-select: none;
}

a.tab, button.tab, details.tab > summary, details > summary.tab, label.tab {
	border-radius: 5px;
	/* color: hsl(0deg 0% 100% / 50%); */
	color: hsl(200deg 40% 75% / 50%);
	text-align: center;
	text-transform: capitalize;
	width: -webkit-fill-available;
}

details.tab > summary { list-style: none; }

a:is(.button, .tab):hover, button:hover, label:hover, details.tab > summary:hover, details > summary.tab:hover {
	backdrop-filter: brightness(0.8);
	/* background:rgba(0, 0, 0, .2); */
	cursor: pointer;
}

.notification { padding-right: 2rem; }
.notification::after {
	background-color: crimson;
	border-radius: 0.25rem;
	bottom: 0;
	color: var(--text-color);
	content: "!";
	font-family: system-ui;
	font-size: 0.75rem;
	font-weight: 800;
	height: 1rem;
	margin: auto;
	max-height: -webkit-fill-available;
	opacity: 0.8;
	padding: 0 0.3rem;
	position: absolute;
	right: 0.4rem;
	top: 0;
}

dialog.prompt {
	backdrop-filter: blur(.4rem);
	background-color: transparent;
	border: none;
	height: 100%;
	width: 100%;
	z-index: 40;
}

dialog.prompt > form {
	height: fit-content;
	inset: 0;
	margin: auto;
	position: absolute;
	width: fit-content;
}

.option-wrapper { position: relative; }
.option-wrapper > .options:empty { display: none; }
.option-wrapper > .options {
	background-color: var(--background-color);
	display: flex;
	flex-direction: column;
	max-height: 25vh;
	overflow-y: auto;
	position: absolute;
	top: 100%;
	width: 100%;
	z-index: 10;
}

div.details {
	padding: 0.25rem;
	font-size: small;
	font-family: roboto_medium, Arial, Helvetica, sans-serif;
}

div.details > input:is([type="checkbox"], [type="radio"]) { display: none; }
div.details:has(> input:is([type="checkbox"], [type="radio"]):not(:checked)) { display: none !important; }

.disabled {
	-webkit-user-select: none;
	opacity: .5;
	pointer-events: none;
	user-select: none;
}

label > * { vertical-align: middle; }
label input:is([type="checkbox"], [type="color"], [type="radio"]):first-child {
	margin: 0;
	margin-right: 0.5rem;
	vertical-align: middle;
}

label:hover, button:hover, details.tab > summary:hover, details > summary.tab:hover {
	backdrop-filter: brightness(0.8);
	/* background:rgba(0, 0, 0, .2); */
	cursor: pointer;
}

label input:not(.override-pointer-events):not(input[type="text"]) {
	pointer-events: none;
	touch-action: none;
}

label input:is([type="checkbox"], [type="radio"]) {
	rotate: 90deg;
	scale: 0.85;
	transition: all .2s;
}

label input:is([type="checkbox"], [type="radio"]):checked {
	rotate: none;
	scale: none;
	transition: all .2s;
}

label input[type="color"] {
	border: none;
	border-radius: 2px;
	bottom: 0;
	height: 13px;
	left: 0;
	overflow: hidden;
	padding: 0;
	position: absolute;
	visibility: hidden;
	width: 13px;
}

label input[type="color"]::-webkit-color-swatch-wrapper { padding: 0 }
label input[type="color"]::-webkit-color-swatch { border: none }

[data-stag]::after {
	background-color: hsl(0 0% 0% / 15%);
	border: 1px solid hsl(0 0% 0% / 15%);
	border-radius: .25em;
	content: attr(data-stag);
	float: right;
	font-size: .65em;
	font-weight: bolder;
	padding: .25em .75em;
	text-transform: uppercase;
}

input:is([type="date"], [type="email"], [type="number"], [type="password"], [type="text"]),
textarea {
	background-color: hsl(206, 23%, 18%);
	color: var(--text-color);
	border: none;
	border-radius: 0.2rem;
	padding: 0.25rem 0.5rem;
}

input:is([type="date"], [type="email"], [type="number"], [type="password"], [type="text"]).outline,
textarea.outline {
	background-color: transparent;
	border: 2px solid hsl(206, 23%, 18%);
	/* box-shadow: 0 0 0 1px hsl(206, 23%, 18%); */
}

input:is([type="date"], [type="email"], [type="number"], [type="password"], [type="text"]):focus,
textarea:focus {
	background-color: transparent;
	box-shadow: inset 0 0 0 1px hsl(206, 23%, 18%);
}

input[type="email"]:focus { outline-style: auto !important; }
input[type="email"]:focus:invalid { outline: red; }
input[type="email"]:focus:valid { outline: green; }

select {
	background-color: hsl(206, 23%, 18%);
	border: none;
	border-radius: 4px;
	border-right: 0.25rem solid transparent;
	box-shadow: 0 0 0 1px rgba(0, 0, 0, .2) !important;
	color: var(--text-color);
	outline: none;
	padding: 0.25rem;
}

select > * { background-color: inherit; }
select > option:empty { text-transform: capitalize; }
table tr > * { padding: 0.25rem; }
table tbody tr td {
	border-radius: 0.36rem;
	text-transform: capitalize;
}

.dropdown {
	position: relative;
	transition: all 10s;
}

.dropdown:empty { display: none; }
.dropdown > main {
	background-color: var(--accent-color);
	box-shadow: 0 0 20px -10px var(--border-color);
	display: block;
	flex-direction: column;
	max-height: 0;
	overflow-y: auto;
	position: absolute;
	z-index: 1;
}

.dropdown:is(:not(:has(> input:hover)):hover, :focus-within) > main {
	height: auto;
	max-height: 100vh;
	border-radius: 5px;
	transition: max-height .25s ease-in;
}

.dropdown:is(:hover, :focus-within) > * { outline: none; }
.dropdown > main > * {
	border-radius: 0.4rem;
	margin: 0.25rem;
	padding: 0.5rem !important;
	text-align: left;
}

.dropdown > main > *:hover {
	backdrop-filter: brightness(0.5);
	cursor: pointer;
}

.dropdown > main > * > * {
	-webkit-user-select: none;
	user-select: none;
	vertical-align: middle;
}

.dropdown > main > * > img {
	border-radius: 50%;
	height: 2rem;
	margin-right: 0.4rem;
	object-fit: cover;
	width: 2rem;
}

button.loading { box-shadow: inset 0 0 1px 2px rgba(0, 0, 0, .2) !important; }

.loading {
	-webkit-user-select: none;
	color: transparent !important;
	opacity: 0.5;
	pointer-events: none;
	position: relative;
	transition: box-shadow 240ms;
	user-select: none;
}

.loading * { visibility: hidden; }
.loading::after {
	animation: rotate 800ms cubic-bezier(.5, .5, .5, .5) infinite;
	background-color: transparent;
	border: 2px solid;
	border-color: white !important;
	border-bottom-color: transparent !important;
	border-radius: 50%;
	content: "";
	height: 0;
	inset: 0;
	margin: auto;
	padding: 0.25rem;
	position: absolute;
	width: 0;
}

.ripple { overflow: hidden; }
.ripple::before {
	background-color: black;
	border-radius: 50%;
	content: "";
	left: calc(var(--offsetX) * 1px);
	opacity: 0;
	padding: 50%;
	pointer-events: none;
	position: absolute;
	scale: 2;
	top: calc(var(--offsetY) * 1px);
	translate: -50% -50%;
	transition: translate 800ms ease-out, scale 800ms, opacity 1s;
}

/* .ripple:not(.focus):active::before, .ripple.focus:not(:focus-within):active::before */
.ripple:is(:not(.focus), .focus:not(:focus-within)):active::before {
	opacity: .5;
	scale: 0;
	transition: 0s;
	translate: -50% -50%;
}